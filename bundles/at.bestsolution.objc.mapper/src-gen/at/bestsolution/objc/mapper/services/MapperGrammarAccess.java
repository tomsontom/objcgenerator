/*
* generated by Xtext
*/
package at.bestsolution.objc.mapper.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MapperGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNativeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNativeNativeKeyword_0_0 = (Keyword)cNativeAssignment_0.eContents().get(0);
		private final Keyword cFrameworkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cMappedToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cJavaPackageAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cJavaPackageQualifiedNameParserRuleCall_4_0 = (RuleCall)cJavaPackageAssignment_4.eContents().get(0);
		private final Assignment cImportsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImportsImportParserRuleCall_5_0 = (RuleCall)cImportsAssignment_5.eContents().get(0);
		private final Assignment cTypesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypesTypeParserRuleCall_6_0 = (RuleCall)cTypesAssignment_6.eContents().get(0);
		
		//PackageDeclaration:
		//	native?="native"? "framework" name=ID "mapped-to" javaPackage=QualifiedName imports+=Import* types+=Type+;
		public ParserRule getRule() { return rule; }

		//native?="native"? "framework" name=ID "mapped-to" javaPackage=QualifiedName imports+=Import* types+=Type+
		public Group getGroup() { return cGroup; }

		//native?="native"?
		public Assignment getNativeAssignment_0() { return cNativeAssignment_0; }

		//"native"
		public Keyword getNativeNativeKeyword_0_0() { return cNativeNativeKeyword_0_0; }

		//"framework"
		public Keyword getFrameworkKeyword_1() { return cFrameworkKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"mapped-to"
		public Keyword getMappedToKeyword_3() { return cMappedToKeyword_3; }

		//javaPackage=QualifiedName
		public Assignment getJavaPackageAssignment_4() { return cJavaPackageAssignment_4; }

		//QualifiedName
		public RuleCall getJavaPackageQualifiedNameParserRuleCall_4_0() { return cJavaPackageQualifiedNameParserRuleCall_4_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_5() { return cImportsAssignment_5; }

		//Import
		public RuleCall getImportsImportParserRuleCall_5_0() { return cImportsImportParserRuleCall_5_0; }

		//types+=Type+
		public Assignment getTypesAssignment_6() { return cTypesAssignment_6; }

		//Type
		public RuleCall getTypesTypeParserRuleCall_6_0() { return cTypesTypeParserRuleCall_6_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cImportedNamespaceAlternatives_1_0 = (Alternatives)cImportedNamespaceAssignment_1.eContents().get(0);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(0);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(1);
		
		//Import:
		//	"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName);
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName)
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=(QualifiedNameWithWildcard | QualifiedName)
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedNameWithWildcard | QualifiedName
		public Alternatives getImportedNamespaceAlternatives_1_0() { return cImportedNamespaceAlternatives_1_0; }

		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0_0; }

		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_1_0_1() { return cImportedNamespaceQualifiedNameParserRuleCall_1_0_1; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cProtocolParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTypeDefParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Type:
		//	Protocol | Class | Enum | TypeDef;
		public ParserRule getRule() { return rule; }

		//Protocol | Class | Enum | TypeDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//Protocol
		public RuleCall getProtocolParserRuleCall_0() { return cProtocolParserRuleCall_0; }

		//Class
		public RuleCall getClassParserRuleCall_1() { return cClassParserRuleCall_1; }

		//Enum
		public RuleCall getEnumParserRuleCall_2() { return cEnumParserRuleCall_2; }

		//TypeDef
		public RuleCall getTypeDefParserRuleCall_3() { return cTypeDefParserRuleCall_3; }
	}

	public class TypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cIdKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_0_1_1_0 = (CrossReference)cTypeAssignment_0_1_1.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_0_1_1_0_1 = (RuleCall)cTypeTypeCrossReference_0_1_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cTypeAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cTypeTypeCrossReference_1_0_0 = (CrossReference)cTypeAssignment_1_0.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_1_0_0_1 = (RuleCall)cTypeTypeCrossReference_1_0_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cLessThanSignKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cGenericTypeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cGenericTypeTypeRefParserRuleCall_1_1_1_0 = (RuleCall)cGenericTypeAssignment_1_1_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Keyword cAsteriskKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cBuiltinAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cBuiltinBuiltinTypeParserRuleCall_2_0 = (RuleCall)cBuiltinAssignment_2.eContents().get(0);
		
		//TypeRef:
		//	"id" ("<" type=[Type|QualifiedName] ">")? | type=[Type|QualifiedName] ("<" genericType=TypeRef ">")? "*"? |
		//	builtin=BuiltinType;
		public ParserRule getRule() { return rule; }

		//"id" ("<" type=[Type|QualifiedName] ">")? | type=[Type|QualifiedName] ("<" genericType=TypeRef ">")? "*"? |
		//builtin=BuiltinType
		public Alternatives getAlternatives() { return cAlternatives; }

		//"id" ("<" type=[Type|QualifiedName] ">")?
		public Group getGroup_0() { return cGroup_0; }

		//"id"
		public Keyword getIdKeyword_0_0() { return cIdKeyword_0_0; }

		//("<" type=[Type|QualifiedName] ">")?
		public Group getGroup_0_1() { return cGroup_0_1; }

		//"<"
		public Keyword getLessThanSignKeyword_0_1_0() { return cLessThanSignKeyword_0_1_0; }

		//type=[Type|QualifiedName]
		public Assignment getTypeAssignment_0_1_1() { return cTypeAssignment_0_1_1; }

		//[Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_0_1_1_0() { return cTypeTypeCrossReference_0_1_1_0; }

		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_0_1_1_0_1() { return cTypeTypeQualifiedNameParserRuleCall_0_1_1_0_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_0_1_2() { return cGreaterThanSignKeyword_0_1_2; }

		//type=[Type|QualifiedName] ("<" genericType=TypeRef ">")? "*"?
		public Group getGroup_1() { return cGroup_1; }

		//type=[Type|QualifiedName]
		public Assignment getTypeAssignment_1_0() { return cTypeAssignment_1_0; }

		//[Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_1_0_0() { return cTypeTypeCrossReference_1_0_0; }

		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_1_0_0_1() { return cTypeTypeQualifiedNameParserRuleCall_1_0_0_1; }

		//("<" genericType=TypeRef ">")?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"<"
		public Keyword getLessThanSignKeyword_1_1_0() { return cLessThanSignKeyword_1_1_0; }

		//genericType=TypeRef
		public Assignment getGenericTypeAssignment_1_1_1() { return cGenericTypeAssignment_1_1_1; }

		//TypeRef
		public RuleCall getGenericTypeTypeRefParserRuleCall_1_1_1_0() { return cGenericTypeTypeRefParserRuleCall_1_1_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_1_1_2() { return cGreaterThanSignKeyword_1_1_2; }

		//"*"?
		public Keyword getAsteriskKeyword_1_2() { return cAsteriskKeyword_1_2; }

		//builtin=BuiltinType
		public Assignment getBuiltinAssignment_2() { return cBuiltinAssignment_2; }

		//BuiltinType
		public RuleCall getBuiltinBuiltinTypeParserRuleCall_2_0() { return cBuiltinBuiltinTypeParserRuleCall_2_0; }
	}

	public class ProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Protocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDocuParserRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cDeprecatedKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDeprecatedAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDeprecatedVersionParserRuleCall_1_1_0 = (RuleCall)cDeprecatedAssignment_1_1.eContents().get(0);
		private final Keyword cProtocolKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSinceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSinceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSinceVersionParserRuleCall_5_0 = (RuleCall)cSinceAssignment_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMessagesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMessagesMessageParserRuleCall_7_0 = (RuleCall)cMessagesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Protocol:
		//	doc=Docu? ("deprecated" deprecated=Version)? "protocol" name=ID "since" since=Version "{" messages+=Message* "}";
		public ParserRule getRule() { return rule; }

		//doc=Docu? ("deprecated" deprecated=Version)? "protocol" name=ID "since" since=Version "{" messages+=Message* "}"
		public Group getGroup() { return cGroup; }

		//doc=Docu?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//Docu
		public RuleCall getDocDocuParserRuleCall_0_0() { return cDocDocuParserRuleCall_0_0; }

		//("deprecated" deprecated=Version)?
		public Group getGroup_1() { return cGroup_1; }

		//"deprecated"
		public Keyword getDeprecatedKeyword_1_0() { return cDeprecatedKeyword_1_0; }

		//deprecated=Version
		public Assignment getDeprecatedAssignment_1_1() { return cDeprecatedAssignment_1_1; }

		//Version
		public RuleCall getDeprecatedVersionParserRuleCall_1_1_0() { return cDeprecatedVersionParserRuleCall_1_1_0; }

		//"protocol"
		public Keyword getProtocolKeyword_2() { return cProtocolKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"since"
		public Keyword getSinceKeyword_4() { return cSinceKeyword_4; }

		//since=Version
		public Assignment getSinceAssignment_5() { return cSinceAssignment_5; }

		//Version
		public RuleCall getSinceVersionParserRuleCall_5_0() { return cSinceVersionParserRuleCall_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//messages+=Message*
		public Assignment getMessagesAssignment_7() { return cMessagesAssignment_7; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_7_0() { return cMessagesMessageParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDocuParserRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cDeprecatedKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDeprecatedAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDeprecatedVersionParserRuleCall_1_1_0 = (RuleCall)cDeprecatedAssignment_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cPlusSignKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReturnValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReturnValueTypeRefParserRuleCall_4_0 = (RuleCall)cReturnValueAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cElementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cElementsMessageElementParserRuleCall_6_0 = (RuleCall)cElementsAssignment_6.eContents().get(0);
		private final Keyword cSinceKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSinceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSinceVersionParserRuleCall_8_0 = (RuleCall)cSinceAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cMappedToKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cJavaNameAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cJavaNameIDTerminalRuleCall_9_1_0 = (RuleCall)cJavaNameAssignment_9_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Message:
		//	doc=Docu? ("deprecated" deprecated=Version)? ("-" | "+") "(" returnValue=TypeRef ")" elements+=MessageElement+ "since"
		//	since=Version ("mapped-to" javaName=ID)? ";";
		public ParserRule getRule() { return rule; }

		//doc=Docu? ("deprecated" deprecated=Version)? ("-" | "+") "(" returnValue=TypeRef ")" elements+=MessageElement+ "since"
		//since=Version ("mapped-to" javaName=ID)? ";"
		public Group getGroup() { return cGroup; }

		//doc=Docu?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//Docu
		public RuleCall getDocDocuParserRuleCall_0_0() { return cDocDocuParserRuleCall_0_0; }

		//("deprecated" deprecated=Version)?
		public Group getGroup_1() { return cGroup_1; }

		//"deprecated"
		public Keyword getDeprecatedKeyword_1_0() { return cDeprecatedKeyword_1_0; }

		//deprecated=Version
		public Assignment getDeprecatedAssignment_1_1() { return cDeprecatedAssignment_1_1; }

		//Version
		public RuleCall getDeprecatedVersionParserRuleCall_1_1_0() { return cDeprecatedVersionParserRuleCall_1_1_0; }

		//"-" | "+"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"-"
		public Keyword getHyphenMinusKeyword_2_0() { return cHyphenMinusKeyword_2_0; }

		//"+"
		public Keyword getPlusSignKeyword_2_1() { return cPlusSignKeyword_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//returnValue=TypeRef
		public Assignment getReturnValueAssignment_4() { return cReturnValueAssignment_4; }

		//TypeRef
		public RuleCall getReturnValueTypeRefParserRuleCall_4_0() { return cReturnValueTypeRefParserRuleCall_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//elements+=MessageElement+
		public Assignment getElementsAssignment_6() { return cElementsAssignment_6; }

		//MessageElement
		public RuleCall getElementsMessageElementParserRuleCall_6_0() { return cElementsMessageElementParserRuleCall_6_0; }

		//"since"
		public Keyword getSinceKeyword_7() { return cSinceKeyword_7; }

		//since=Version
		public Assignment getSinceAssignment_8() { return cSinceAssignment_8; }

		//Version
		public RuleCall getSinceVersionParserRuleCall_8_0() { return cSinceVersionParserRuleCall_8_0; }

		//("mapped-to" javaName=ID)?
		public Group getGroup_9() { return cGroup_9; }

		//"mapped-to"
		public Keyword getMappedToKeyword_9_0() { return cMappedToKeyword_9_0; }

		//javaName=ID
		public Assignment getJavaNameAssignment_9_1() { return cJavaNameAssignment_9_1; }

		//ID
		public RuleCall getJavaNameIDTerminalRuleCall_9_1_0() { return cJavaNameIDTerminalRuleCall_9_1_0; }

		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
	}

	public class MessageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MessageElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cConstKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cTypeAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cTypeTypeRefParserRuleCall_1_3_0 = (RuleCall)cTypeAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cVariableAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cVariableIDTerminalRuleCall_1_5_0 = (RuleCall)cVariableAssignment_1_5.eContents().get(0);
		
		//MessageElement:
		//	name=ID (":" "(" "const"? type=TypeRef ")" variable=ID)?;
		public ParserRule getRule() { return rule; }

		//name=ID (":" "(" "const"? type=TypeRef ")" variable=ID)?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//(":" "(" "const"? type=TypeRef ")" variable=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//"const"?
		public Keyword getConstKeyword_1_2() { return cConstKeyword_1_2; }

		//type=TypeRef
		public Assignment getTypeAssignment_1_3() { return cTypeAssignment_1_3; }

		//TypeRef
		public RuleCall getTypeTypeRefParserRuleCall_1_3_0() { return cTypeTypeRefParserRuleCall_1_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }

		//variable=ID
		public Assignment getVariableAssignment_1_5() { return cVariableAssignment_1_5; }

		//ID
		public RuleCall getVariableIDTerminalRuleCall_1_5_0() { return cVariableIDTerminalRuleCall_1_5_0; }
	}

	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDocuParserRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cDeprecatedKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDeprecatedAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDeprecatedVersionParserRuleCall_1_1_0 = (RuleCall)cDeprecatedAssignment_1_1.eContents().get(0);
		private final Keyword cClassKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSinceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSinceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSinceVersionParserRuleCall_5_0 = (RuleCall)cSinceAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cInheritsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cParentAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cParentClassCrossReference_6_1_0 = (CrossReference)cParentAssignment_6_1.eContents().get(0);
		private final RuleCall cParentClassQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cParentClassCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cConformsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cProtocolsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cProtocolsProtocolCrossReference_7_1_0 = (CrossReference)cProtocolsAssignment_7_1.eContents().get(0);
		private final RuleCall cProtocolsProtocolQualifiedNameParserRuleCall_7_1_0_1 = (RuleCall)cProtocolsProtocolCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cProtocolsAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final CrossReference cProtocolsProtocolCrossReference_7_2_1_0 = (CrossReference)cProtocolsAssignment_7_2_1.eContents().get(0);
		private final RuleCall cProtocolsProtocolQualifiedNameParserRuleCall_7_2_1_0_1 = (RuleCall)cProtocolsProtocolCrossReference_7_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cInitializersKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cInitializerMessagesAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cInitializerMessagesMessageParserRuleCall_9_2_0 = (RuleCall)cInitializerMessagesAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Assignment cPropertiesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cPropertiesPropertyParserRuleCall_10_0 = (RuleCall)cPropertiesAssignment_10.eContents().get(0);
		private final Assignment cMessagesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cMessagesMessageParserRuleCall_11_0 = (RuleCall)cMessagesAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Class:
		//	doc=Docu? ("deprecated" deprecated=Version)? "class" name=ID "since" since=Version ("inherits"
		//	parent=[Class|QualifiedName])? ("conforms" protocols+=[Protocol|QualifiedName] (","
		//	protocols+=[Protocol|QualifiedName])*)? "{" ("initializers" "{" initializerMessages+=Message+ "}")?
		//	properties+=Property* messages+=Message* "}";
		public ParserRule getRule() { return rule; }

		//doc=Docu? ("deprecated" deprecated=Version)? "class" name=ID "since" since=Version ("inherits"
		//parent=[Class|QualifiedName])? ("conforms" protocols+=[Protocol|QualifiedName] (","
		//protocols+=[Protocol|QualifiedName])*)? "{" ("initializers" "{" initializerMessages+=Message+ "}")?
		//properties+=Property* messages+=Message* "}"
		public Group getGroup() { return cGroup; }

		//doc=Docu?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//Docu
		public RuleCall getDocDocuParserRuleCall_0_0() { return cDocDocuParserRuleCall_0_0; }

		//("deprecated" deprecated=Version)?
		public Group getGroup_1() { return cGroup_1; }

		//"deprecated"
		public Keyword getDeprecatedKeyword_1_0() { return cDeprecatedKeyword_1_0; }

		//deprecated=Version
		public Assignment getDeprecatedAssignment_1_1() { return cDeprecatedAssignment_1_1; }

		//Version
		public RuleCall getDeprecatedVersionParserRuleCall_1_1_0() { return cDeprecatedVersionParserRuleCall_1_1_0; }

		//"class"
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"since"
		public Keyword getSinceKeyword_4() { return cSinceKeyword_4; }

		//since=Version
		public Assignment getSinceAssignment_5() { return cSinceAssignment_5; }

		//Version
		public RuleCall getSinceVersionParserRuleCall_5_0() { return cSinceVersionParserRuleCall_5_0; }

		//("inherits" parent=[Class|QualifiedName])?
		public Group getGroup_6() { return cGroup_6; }

		//"inherits"
		public Keyword getInheritsKeyword_6_0() { return cInheritsKeyword_6_0; }

		//parent=[Class|QualifiedName]
		public Assignment getParentAssignment_6_1() { return cParentAssignment_6_1; }

		//[Class|QualifiedName]
		public CrossReference getParentClassCrossReference_6_1_0() { return cParentClassCrossReference_6_1_0; }

		//QualifiedName
		public RuleCall getParentClassQualifiedNameParserRuleCall_6_1_0_1() { return cParentClassQualifiedNameParserRuleCall_6_1_0_1; }

		//("conforms" protocols+=[Protocol|QualifiedName] ("," protocols+=[Protocol|QualifiedName])*)?
		public Group getGroup_7() { return cGroup_7; }

		//"conforms"
		public Keyword getConformsKeyword_7_0() { return cConformsKeyword_7_0; }

		//protocols+=[Protocol|QualifiedName]
		public Assignment getProtocolsAssignment_7_1() { return cProtocolsAssignment_7_1; }

		//[Protocol|QualifiedName]
		public CrossReference getProtocolsProtocolCrossReference_7_1_0() { return cProtocolsProtocolCrossReference_7_1_0; }

		//QualifiedName
		public RuleCall getProtocolsProtocolQualifiedNameParserRuleCall_7_1_0_1() { return cProtocolsProtocolQualifiedNameParserRuleCall_7_1_0_1; }

		//("," protocols+=[Protocol|QualifiedName])*
		public Group getGroup_7_2() { return cGroup_7_2; }

		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }

		//protocols+=[Protocol|QualifiedName]
		public Assignment getProtocolsAssignment_7_2_1() { return cProtocolsAssignment_7_2_1; }

		//[Protocol|QualifiedName]
		public CrossReference getProtocolsProtocolCrossReference_7_2_1_0() { return cProtocolsProtocolCrossReference_7_2_1_0; }

		//QualifiedName
		public RuleCall getProtocolsProtocolQualifiedNameParserRuleCall_7_2_1_0_1() { return cProtocolsProtocolQualifiedNameParserRuleCall_7_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//("initializers" "{" initializerMessages+=Message+ "}")?
		public Group getGroup_9() { return cGroup_9; }

		//"initializers"
		public Keyword getInitializersKeyword_9_0() { return cInitializersKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//initializerMessages+=Message+
		public Assignment getInitializerMessagesAssignment_9_2() { return cInitializerMessagesAssignment_9_2; }

		//Message
		public RuleCall getInitializerMessagesMessageParserRuleCall_9_2_0() { return cInitializerMessagesMessageParserRuleCall_9_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_10() { return cPropertiesAssignment_10; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_10_0() { return cPropertiesPropertyParserRuleCall_10_0; }

		//messages+=Message*
		public Assignment getMessagesAssignment_11() { return cMessagesAssignment_11; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_11_0() { return cMessagesMessageParserRuleCall_11_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class VersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Version");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSinceMajorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSinceMajorINTTerminalRuleCall_0_0 = (RuleCall)cSinceMajorAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSinceMinorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSinceMinorINTTerminalRuleCall_2_0 = (RuleCall)cSinceMinorAssignment_2.eContents().get(0);
		
		//Version:
		//	sinceMajor=INT "." sinceMinor=INT;
		public ParserRule getRule() { return rule; }

		//sinceMajor=INT "." sinceMinor=INT
		public Group getGroup() { return cGroup; }

		//sinceMajor=INT
		public Assignment getSinceMajorAssignment_0() { return cSinceMajorAssignment_0; }

		//INT
		public RuleCall getSinceMajorINTTerminalRuleCall_0_0() { return cSinceMajorINTTerminalRuleCall_0_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//sinceMinor=INT
		public Assignment getSinceMinorAssignment_2() { return cSinceMinorAssignment_2; }

		//INT
		public RuleCall getSinceMinorINTTerminalRuleCall_2_0() { return cSinceMinorINTTerminalRuleCall_2_0; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDocuParserRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cDeprecatedKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDeprecatedAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDeprecatedVersionParserRuleCall_1_1_0 = (RuleCall)cDeprecatedAssignment_1_1.eContents().get(0);
		private final Keyword cPropertyKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cAttributesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cAttributesPropertyAttributeParserRuleCall_4_0_0 = (RuleCall)cAttributesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cAttributesPropertyAttributeParserRuleCall_4_1_1_0 = (RuleCall)cAttributesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeTypeRefParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameIDTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Keyword cSinceKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSinceAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSinceVersionParserRuleCall_9_0 = (RuleCall)cSinceAssignment_9.eContents().get(0);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Property:
		//	doc=Docu? ("deprecated" deprecated=Version)? "@property" "(" (attributes+=PropertyAttribute (","
		//	attributes+=PropertyAttribute)*)? ")" type=TypeRef name=ID "since" since=Version ";";
		public ParserRule getRule() { return rule; }

		//doc=Docu? ("deprecated" deprecated=Version)? "@property" "(" (attributes+=PropertyAttribute (","
		//attributes+=PropertyAttribute)*)? ")" type=TypeRef name=ID "since" since=Version ";"
		public Group getGroup() { return cGroup; }

		//doc=Docu?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//Docu
		public RuleCall getDocDocuParserRuleCall_0_0() { return cDocDocuParserRuleCall_0_0; }

		//("deprecated" deprecated=Version)?
		public Group getGroup_1() { return cGroup_1; }

		//"deprecated"
		public Keyword getDeprecatedKeyword_1_0() { return cDeprecatedKeyword_1_0; }

		//deprecated=Version
		public Assignment getDeprecatedAssignment_1_1() { return cDeprecatedAssignment_1_1; }

		//Version
		public RuleCall getDeprecatedVersionParserRuleCall_1_1_0() { return cDeprecatedVersionParserRuleCall_1_1_0; }

		//"@property"
		public Keyword getPropertyKeyword_2() { return cPropertyKeyword_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(attributes+=PropertyAttribute ("," attributes+=PropertyAttribute)*)?
		public Group getGroup_4() { return cGroup_4; }

		//attributes+=PropertyAttribute
		public Assignment getAttributesAssignment_4_0() { return cAttributesAssignment_4_0; }

		//PropertyAttribute
		public RuleCall getAttributesPropertyAttributeParserRuleCall_4_0_0() { return cAttributesPropertyAttributeParserRuleCall_4_0_0; }

		//("," attributes+=PropertyAttribute)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//attributes+=PropertyAttribute
		public Assignment getAttributesAssignment_4_1_1() { return cAttributesAssignment_4_1_1; }

		//PropertyAttribute
		public RuleCall getAttributesPropertyAttributeParserRuleCall_4_1_1_0() { return cAttributesPropertyAttributeParserRuleCall_4_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//type=TypeRef
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }

		//TypeRef
		public RuleCall getTypeTypeRefParserRuleCall_6_0() { return cTypeTypeRefParserRuleCall_6_0; }

		//name=ID
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_7_0() { return cNameIDTerminalRuleCall_7_0; }

		//"since"
		public Keyword getSinceKeyword_8() { return cSinceKeyword_8; }

		//since=Version
		public Assignment getSinceAssignment_9() { return cSinceAssignment_9; }

		//Version
		public RuleCall getSinceVersionParserRuleCall_9_0() { return cSinceVersionParserRuleCall_9_0; }

		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
	}

	public class PropertyAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropertyAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueIDTerminalRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		
		//PropertyAttribute:
		//	name=ID ("=" value=ID)?;
		public ParserRule getRule() { return rule; }

		//name=ID ("=" value=ID)?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("=" value=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//"="
		public Keyword getEqualsSignKeyword_1_0() { return cEqualsSignKeyword_1_0; }

		//value=ID
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }

		//ID
		public RuleCall getValueIDTerminalRuleCall_1_1_0() { return cValueIDTerminalRuleCall_1_1_0; }
	}

	public class EnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Enum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cElementsEnumElementParserRuleCall_3_0 = (RuleCall)cElementsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cElementsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cElementsEnumElementParserRuleCall_4_1_0 = (RuleCall)cElementsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Enum:
		//	"enum" name=ID "{" elements+=EnumElement ("," elements+=EnumElement)* "}";
		public ParserRule getRule() { return rule; }

		//"enum" name=ID "{" elements+=EnumElement ("," elements+=EnumElement)* "}"
		public Group getGroup() { return cGroup; }

		//"enum"
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//elements+=EnumElement
		public Assignment getElementsAssignment_3() { return cElementsAssignment_3; }

		//EnumElement
		public RuleCall getElementsEnumElementParserRuleCall_3_0() { return cElementsEnumElementParserRuleCall_3_0; }

		//("," elements+=EnumElement)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//elements+=EnumElement
		public Assignment getElementsAssignment_4_1() { return cElementsAssignment_4_1; }

		//EnumElement
		public RuleCall getElementsEnumElementParserRuleCall_4_1_0() { return cElementsEnumElementParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EnumElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		
		//EnumElement:
		//	name=ID ("=" value=INT)?;
		public ParserRule getRule() { return rule; }

		//name=ID ("=" value=INT)?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("=" value=INT)?
		public Group getGroup_1() { return cGroup_1; }

		//"="
		public Keyword getEqualsSignKeyword_1_0() { return cEqualsSignKeyword_1_0; }

		//value=INT
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_1_0() { return cValueINTTerminalRuleCall_1_1_0; }
	}

	public class TypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDocuParserRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cTypedefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cStructAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final Keyword cStructStructKeyword_2_0_0_0 = (Keyword)cStructAssignment_2_0_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_0_2 = (Group)cGroup_2_0.eContents().get(2);
		private final Assignment cAttributesAssignment_2_0_2_0 = (Assignment)cGroup_2_0_2.eContents().get(0);
		private final RuleCall cAttributesTypeStructAttributeParserRuleCall_2_0_2_0_0 = (RuleCall)cAttributesAssignment_2_0_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_0_2_1 = (Keyword)cGroup_2_0_2.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_0_3 = (Keyword)cGroup_2_0.eContents().get(3);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cBlockAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final Keyword cBlockVoidKeyword_2_1_0_0 = (Keyword)cBlockAssignment_2_1_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cAttributesAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cAttributesTypeStructAttributeParserRuleCall_2_1_2_0 = (RuleCall)cAttributesAssignment_2_1_2.eContents().get(0);
		private final Group cGroup_2_1_3 = (Group)cGroup_2_1.eContents().get(3);
		private final Keyword cCommaKeyword_2_1_3_0 = (Keyword)cGroup_2_1_3.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1_3_1 = (Assignment)cGroup_2_1_3.eContents().get(1);
		private final RuleCall cAttributesTypeStructAttributeParserRuleCall_2_1_3_1_0 = (RuleCall)cAttributesAssignment_2_1_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_1_4 = (Keyword)cGroup_2_1.eContents().get(4);
		private final Assignment cTypeRefAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cTypeRefTypeRefParserRuleCall_2_2_0 = (RuleCall)cTypeRefAssignment_2_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TypeDef:
		//	doc=Docu? "typedef" (struct?="struct" "{" (attributes+=TypeStructAttribute ";")+ "}" | block?="void" "("
		//	attributes+=TypeStructAttribute ("," attributes+=TypeStructAttribute)* ")" | typeRef=TypeRef) name=ID ";";
		public ParserRule getRule() { return rule; }

		//doc=Docu? "typedef" (struct?="struct" "{" (attributes+=TypeStructAttribute ";")+ "}" | block?="void" "("
		//attributes+=TypeStructAttribute ("," attributes+=TypeStructAttribute)* ")" | typeRef=TypeRef) name=ID ";"
		public Group getGroup() { return cGroup; }

		//doc=Docu?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//Docu
		public RuleCall getDocDocuParserRuleCall_0_0() { return cDocDocuParserRuleCall_0_0; }

		//"typedef"
		public Keyword getTypedefKeyword_1() { return cTypedefKeyword_1; }

		//struct?="struct" "{" (attributes+=TypeStructAttribute ";")+ "}" | block?="void" "(" attributes+=TypeStructAttribute (","
		//attributes+=TypeStructAttribute)* ")" | typeRef=TypeRef
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//struct?="struct" "{" (attributes+=TypeStructAttribute ";")+ "}"
		public Group getGroup_2_0() { return cGroup_2_0; }

		//struct?="struct"
		public Assignment getStructAssignment_2_0_0() { return cStructAssignment_2_0_0; }

		//"struct"
		public Keyword getStructStructKeyword_2_0_0_0() { return cStructStructKeyword_2_0_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0_1() { return cLeftCurlyBracketKeyword_2_0_1; }

		//(attributes+=TypeStructAttribute ";")+
		public Group getGroup_2_0_2() { return cGroup_2_0_2; }

		//attributes+=TypeStructAttribute
		public Assignment getAttributesAssignment_2_0_2_0() { return cAttributesAssignment_2_0_2_0; }

		//TypeStructAttribute
		public RuleCall getAttributesTypeStructAttributeParserRuleCall_2_0_2_0_0() { return cAttributesTypeStructAttributeParserRuleCall_2_0_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_2_0_2_1() { return cSemicolonKeyword_2_0_2_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_0_3() { return cRightCurlyBracketKeyword_2_0_3; }

		//block?="void" "(" attributes+=TypeStructAttribute ("," attributes+=TypeStructAttribute)* ")"
		public Group getGroup_2_1() { return cGroup_2_1; }

		//block?="void"
		public Assignment getBlockAssignment_2_1_0() { return cBlockAssignment_2_1_0; }

		//"void"
		public Keyword getBlockVoidKeyword_2_1_0_0() { return cBlockVoidKeyword_2_1_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1_1() { return cLeftParenthesisKeyword_2_1_1; }

		//attributes+=TypeStructAttribute
		public Assignment getAttributesAssignment_2_1_2() { return cAttributesAssignment_2_1_2; }

		//TypeStructAttribute
		public RuleCall getAttributesTypeStructAttributeParserRuleCall_2_1_2_0() { return cAttributesTypeStructAttributeParserRuleCall_2_1_2_0; }

		//("," attributes+=TypeStructAttribute)*
		public Group getGroup_2_1_3() { return cGroup_2_1_3; }

		//","
		public Keyword getCommaKeyword_2_1_3_0() { return cCommaKeyword_2_1_3_0; }

		//attributes+=TypeStructAttribute
		public Assignment getAttributesAssignment_2_1_3_1() { return cAttributesAssignment_2_1_3_1; }

		//TypeStructAttribute
		public RuleCall getAttributesTypeStructAttributeParserRuleCall_2_1_3_1_0() { return cAttributesTypeStructAttributeParserRuleCall_2_1_3_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_1_4() { return cRightParenthesisKeyword_2_1_4; }

		//typeRef=TypeRef
		public Assignment getTypeRefAssignment_2_2() { return cTypeRefAssignment_2_2; }

		//TypeRef
		public RuleCall getTypeRefTypeRefParserRuleCall_2_2_0() { return cTypeRefTypeRefParserRuleCall_2_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class TypeStructAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeStructAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeRefTypeRefParserRuleCall_0_0 = (RuleCall)cTypeRefAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//TypeStructAttribute:
		//	typeRef=TypeRef name=ID;
		public ParserRule getRule() { return rule; }

		//typeRef=TypeRef name=ID
		public Group getGroup() { return cGroup; }

		//typeRef=TypeRef
		public Assignment getTypeRefAssignment_0() { return cTypeRefAssignment_0; }

		//TypeRef
		public RuleCall getTypeRefTypeRefParserRuleCall_0_0() { return cTypeRefTypeRefParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class BuiltinTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BuiltinType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cVoidKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cBOOLKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDoubleKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//BuiltinType:
		//	"void" | "BOOL" | "double";
		public ParserRule getRule() { return rule; }

		//"void" | "BOOL" | "double"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"void"
		public Keyword getVoidKeyword_0() { return cVoidKeyword_0; }

		//"BOOL"
		public Keyword getBOOLKeyword_1() { return cBOOLKeyword_1; }

		//"double"
		public Keyword getDoubleKeyword_2() { return cDoubleKeyword_2; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValidIDParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cValidIDParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ValidID ("." ValidID)*;
		public ParserRule getRule() { return rule; }

		//ValidID ("." ValidID)*
		public Group getGroup() { return cGroup; }

		//ValidID
		public RuleCall getValidIDParserRuleCall_0() { return cValidIDParserRuleCall_0; }

		//("." ValidID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ValidID
		public RuleCall getValidIDParserRuleCall_1_1() { return cValidIDParserRuleCall_1_1; }
	}

	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName "." "*";
		public ParserRule getRule() { return rule; }

		//QualifiedName "." "*"
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//"*"
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
	}

	public class ValidIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValidID");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ValidID:
		//	ID;
		public ParserRule getRule() { return rule; }

		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}

	public class DocuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Docu");
		private final Assignment cContentAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cContentJDOCTerminalRuleCall_0 = (RuleCall)cContentAssignment.eContents().get(0);
		
		//Docu:
		//	content=JDOC;
		public ParserRule getRule() { return rule; }

		//content=JDOC
		public Assignment getContentAssignment() { return cContentAssignment; }

		//JDOC
		public RuleCall getContentJDOCTerminalRuleCall_0() { return cContentJDOCTerminalRuleCall_0; }
	}
	
	
	private PackageDeclarationElements pPackageDeclaration;
	private ImportElements pImport;
	private TypeElements pType;
	private TypeRefElements pTypeRef;
	private ProtocolElements pProtocol;
	private MessageElements pMessage;
	private MessageElementElements pMessageElement;
	private ClassElements pClass;
	private VersionElements pVersion;
	private PropertyElements pProperty;
	private PropertyAttributeElements pPropertyAttribute;
	private EnumElements pEnum;
	private EnumElementElements pEnumElement;
	private TypeDefElements pTypeDef;
	private TypeStructAttributeElements pTypeStructAttribute;
	private BuiltinTypeElements pBuiltinType;
	private QualifiedNameElements pQualifiedName;
	private QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private ValidIDElements pValidID;
	private DocuElements pDocu;
	private TerminalRule tJDOC;
	private TerminalRule tML_COMMENT;
	private TerminalRule tSL_COMMENT;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public MapperGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.bestsolution.objc.mapper.Mapper".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//PackageDeclaration:
	//	native?="native"? "framework" name=ID "mapped-to" javaPackage=QualifiedName imports+=Import* types+=Type+;
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return (pPackageDeclaration != null) ? pPackageDeclaration : (pPackageDeclaration = new PackageDeclarationElements());
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}

	//Import:
	//	"import" importedNamespace=(QualifiedNameWithWildcard | QualifiedName);
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//Type:
	//	Protocol | Class | Enum | TypeDef;
	public TypeElements getTypeAccess() {
		return (pType != null) ? pType : (pType = new TypeElements());
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//TypeRef:
	//	"id" ("<" type=[Type|QualifiedName] ">")? | type=[Type|QualifiedName] ("<" genericType=TypeRef ">")? "*"? |
	//	builtin=BuiltinType;
	public TypeRefElements getTypeRefAccess() {
		return (pTypeRef != null) ? pTypeRef : (pTypeRef = new TypeRefElements());
	}
	
	public ParserRule getTypeRefRule() {
		return getTypeRefAccess().getRule();
	}

	//Protocol:
	//	doc=Docu? ("deprecated" deprecated=Version)? "protocol" name=ID "since" since=Version "{" messages+=Message* "}";
	public ProtocolElements getProtocolAccess() {
		return (pProtocol != null) ? pProtocol : (pProtocol = new ProtocolElements());
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}

	//Message:
	//	doc=Docu? ("deprecated" deprecated=Version)? ("-" | "+") "(" returnValue=TypeRef ")" elements+=MessageElement+ "since"
	//	since=Version ("mapped-to" javaName=ID)? ";";
	public MessageElements getMessageAccess() {
		return (pMessage != null) ? pMessage : (pMessage = new MessageElements());
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}

	//MessageElement:
	//	name=ID (":" "(" "const"? type=TypeRef ")" variable=ID)?;
	public MessageElementElements getMessageElementAccess() {
		return (pMessageElement != null) ? pMessageElement : (pMessageElement = new MessageElementElements());
	}
	
	public ParserRule getMessageElementRule() {
		return getMessageElementAccess().getRule();
	}

	//Class:
	//	doc=Docu? ("deprecated" deprecated=Version)? "class" name=ID "since" since=Version ("inherits"
	//	parent=[Class|QualifiedName])? ("conforms" protocols+=[Protocol|QualifiedName] (","
	//	protocols+=[Protocol|QualifiedName])*)? "{" ("initializers" "{" initializerMessages+=Message+ "}")?
	//	properties+=Property* messages+=Message* "}";
	public ClassElements getClassAccess() {
		return (pClass != null) ? pClass : (pClass = new ClassElements());
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}

	//Version:
	//	sinceMajor=INT "." sinceMinor=INT;
	public VersionElements getVersionAccess() {
		return (pVersion != null) ? pVersion : (pVersion = new VersionElements());
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}

	//Property:
	//	doc=Docu? ("deprecated" deprecated=Version)? "@property" "(" (attributes+=PropertyAttribute (","
	//	attributes+=PropertyAttribute)*)? ")" type=TypeRef name=ID "since" since=Version ";";
	public PropertyElements getPropertyAccess() {
		return (pProperty != null) ? pProperty : (pProperty = new PropertyElements());
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//PropertyAttribute:
	//	name=ID ("=" value=ID)?;
	public PropertyAttributeElements getPropertyAttributeAccess() {
		return (pPropertyAttribute != null) ? pPropertyAttribute : (pPropertyAttribute = new PropertyAttributeElements());
	}
	
	public ParserRule getPropertyAttributeRule() {
		return getPropertyAttributeAccess().getRule();
	}

	//Enum:
	//	"enum" name=ID "{" elements+=EnumElement ("," elements+=EnumElement)* "}";
	public EnumElements getEnumAccess() {
		return (pEnum != null) ? pEnum : (pEnum = new EnumElements());
	}
	
	public ParserRule getEnumRule() {
		return getEnumAccess().getRule();
	}

	//EnumElement:
	//	name=ID ("=" value=INT)?;
	public EnumElementElements getEnumElementAccess() {
		return (pEnumElement != null) ? pEnumElement : (pEnumElement = new EnumElementElements());
	}
	
	public ParserRule getEnumElementRule() {
		return getEnumElementAccess().getRule();
	}

	//TypeDef:
	//	doc=Docu? "typedef" (struct?="struct" "{" (attributes+=TypeStructAttribute ";")+ "}" | block?="void" "("
	//	attributes+=TypeStructAttribute ("," attributes+=TypeStructAttribute)* ")" | typeRef=TypeRef) name=ID ";";
	public TypeDefElements getTypeDefAccess() {
		return (pTypeDef != null) ? pTypeDef : (pTypeDef = new TypeDefElements());
	}
	
	public ParserRule getTypeDefRule() {
		return getTypeDefAccess().getRule();
	}

	//TypeStructAttribute:
	//	typeRef=TypeRef name=ID;
	public TypeStructAttributeElements getTypeStructAttributeAccess() {
		return (pTypeStructAttribute != null) ? pTypeStructAttribute : (pTypeStructAttribute = new TypeStructAttributeElements());
	}
	
	public ParserRule getTypeStructAttributeRule() {
		return getTypeStructAttributeAccess().getRule();
	}

	//BuiltinType:
	//	"void" | "BOOL" | "double";
	public BuiltinTypeElements getBuiltinTypeAccess() {
		return (pBuiltinType != null) ? pBuiltinType : (pBuiltinType = new BuiltinTypeElements());
	}
	
	public ParserRule getBuiltinTypeRule() {
		return getBuiltinTypeAccess().getRule();
	}

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName "." "*";
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return (pQualifiedNameWithWildcard != null) ? pQualifiedNameWithWildcard : (pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements());
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//ValidID:
	//	ID;
	public ValidIDElements getValidIDAccess() {
		return (pValidID != null) ? pValidID : (pValidID = new ValidIDElements());
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//Docu:
	//	content=JDOC;
	public DocuElements getDocuAccess() {
		return (pDocu != null) ? pDocu : (pDocu = new DocuElements());
	}
	
	public ParserRule getDocuRule() {
		return getDocuAccess().getRule();
	}

	//terminal JDOC:
	//	"/ **"->"* /";
	public TerminalRule getJDOCRule() {
		return (tJDOC != null) ? tJDOC : (tJDOC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JDOC"));
	} 

	//terminal ML_COMMENT:
	//	"/ *" !"*"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
